apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app: console
  name: console
  namespace: kubetailor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: console
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: console
    spec:
      containers:
      - image: mpwsh/kt-console:latest
        imagePullPolicy: Always
        name: console
        ports:
        - name: http
          containerPort: 8000
        env:
        - name: APP_ENVIRONMENT
          value: production
        volumeMounts:
        - name: config
          mountPath: /app/config
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: config
        configMap:
          name: console-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: console
  name: console
  namespace: kubetailor
spec:
  internalTrafficPolicy: Cluster
  ports:
  - port: 8000
    protocol: TCP
    targetPort: 8000
  selector:
    app: console
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: console
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/server-snippet: |
      add_header 'Content-Security-Policy' 'upgrade-insecure-requests';
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
spec:
  ingressClassName: nginx
  rules:
    - host: kubetailor.io
      http:
        paths:
          - pathType: Prefix
            backend:
              service:
                name: console
                port:
                  number: 8000
            path: /
    - host: www.kubetailor.io
      http:
        paths:
          - pathType: Prefix
            backend:
              service:
                name: console
                port:
                  number: 8000
            path: /
  tls:
    - hosts:
      - kubetailor.io
      - www.kubetailor.io
      secretName: kubetailor-tls
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-console
  namespace: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-console
  template:
    metadata:
      labels:
        app: redis-console
        name: redis-console
    spec:
      containers:
      - name: redis-console
        image: redis
        args: ["--appendonly", "yes"]
        ports:
        - name: redis-console
          containerPort: 6379
        volumeMounts:
          - name: lv-storage
            mountPath: /data
        env:
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
      volumes:
        - name: lv-storage
          persistentVolumeClaim:
            claimName: redis-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: redis
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: redis-console
  namespace: redis
spec:
  selector:
    app: redis-console
  type: ClusterIP
  ports:
    - name: redis-port
      protocol: TCP
      port: 6379
      targetPort: 6379
